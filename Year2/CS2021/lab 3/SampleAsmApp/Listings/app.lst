


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   31 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   32 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   33 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   34 00000000         
   35 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   36 00000000                 IMPORT           main
   37 00000000         
   38 00000000         ; (c) Mike Brady, 2014â€“2016.
   39 00000000         
   40 00000000                 EXPORT           start
   41 00000000         start
   42 00000000         
   43 00000000         ; Initialise the VIC
   44 00000000 E59F009C        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   45 00000004         
   46 00000004 E59F109C        ldr              r1,=irqhan
   47 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   48 0000000C         
   49 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   50 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   51 00000014         
   52 00000014 E3A01010        mov              r1,#Timer0Mask
   53 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   54 0000001C         
   55 0000001C E3A01000        mov              r1,#0
   56 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   57 00000024         
   58 00000024         ; Initialise Timer 0
   59 00000024 E59F0080        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   60 00000028         
   61 00000028 E3A01002        mov              r1,#TimerCommandReset
   62 0000002C E5801004        str              r1,[r0,#TCR]



ARM Macro Assembler    Page 3 


   63 00000030         
   64 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   65 00000034 E5801000        str              r1,[r0,#IR]
   66 00000038         
   67 00000038 E59F1070        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   68 0000003C E5801018        str              r1,[r0,#MR0]
   69 00000040         
   70 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   71 00000044 E5801014        str              r1,[r0,#MCR]
   72 00000048         
   73 00000048 E3A01001        mov              r1,#TimerCommandRun
   74 0000004C E5801004        str              r1,[r0,#TCR]
   75 00000050         
   76 00000050         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   77 00000050         
   78 00000050         ; initialisation code
   79 00000050         
   80 00000050 E59F105C        ldr              r1,=IO1DIR
   81 00000054 E3A0280F        ldr              r2,=0x000f0000 ;select P1.19--P
                                                            1.16
   82 00000058 E5812000        str              r2,[r1]     ;make them outputs
   83 0000005C E59F1054        ldr              r1,=IO1SET
   84 00000060 E5812000        str              r2,[r1]     ;set them to turn t
                                                            he LEDs off
   85 00000064 E59F2050        ldr              r2,=IO1CLR
   86 00000068         ; r1 points to the SET register
   87 00000068         ; r2 points to the CLEAR register
   88 00000068         
   89 00000068         ;Lab one here but polling the count
   90 00000068 E3A05601        ldr              r5,=0x00100000 ; end when the m
                                                            ask reaches this va
                                                            lue
   91 0000006C E3A090C8        LDR              R9, =200    ; initialise the de
                                                            lay
   92 00000070         
   93 00000070 E3A03801 
                       wloop   ldr              r3,=0x00010000 
                                                            ; start with P1.16.
                                                            
   94 00000074 E5823000 
                       floop   str              r3,[r2]     ; clear the bit -> 
                                                            turn on the LED
   95 00000078         
   96 00000078         ;delay for about a second
   97 00000078         checkTime
   98 00000078 E59F4040        LDR              R4, =count
   99 0000007C E5948000        LDR              R8, [R4]
  100 00000080 E1580009        CMP              R8, R9
  101 00000084 1AFFFFFB        BNE              checkTime
  102 00000088 E28990C8        ADD              R9, R9, #200
  103 0000008C         
  104 0000008C E5813000        str              r3,[r1]     ;set the bit -> tur
                                                            n off the LED
  105 00000090 E1A03083        mov              r3,r3,lsl #1 ;shift up to next 
                                                            bit. P1.16 -> P1.17
                                                             etc.
  106 00000094 E1530005        cmp              r3,r5



ARM Macro Assembler    Page 4 


  107 00000098 1AFFFFF5        bne              floop
  108 0000009C EAFFFFF3        b                wloop
  109 000000A0         
  110 000000A0 EAFFFFFE 
                       stop    b                stop        ; branch always
  111 000000A4         ;main program execution will never drop below the statem
                       ent above.
  112 000000A4         
  113 000000A4 FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              E0028018 
              E0028014 
              E002801C 
              00000000         AREA             InterruptStuff, CODE, READONLY
  114 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  115 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
  116 00000008         
  117 00000008         ;this is the body of the interrupt handler
  118 00000008         
  119 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  120 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  121 00000008 E59F0024        LDR              R0, =count
  122 0000000C E5901000        LDR              R1, [R0]
  123 00000010 E2811001        ADD              R1, R1, #1
  124 00000014 E5801000        STR              R1, [R0]
  125 00000018         
  126 00000018         ;this is where we stop the timer from making the interru
                       pt request to the VIC
  127 00000018         ;i.e. we 'acknowledge' the interrupt
  128 00000018 E59F0018        ldr              r0,=T0
  129 0000001C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  130 00000020 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  131 00000024         
  132 00000024         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  133 00000024 E59F0010        ldr              r0,=VIC
  134 00000028 E3A01000        mov              r1,#0
  135 0000002C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  136 00000030         
  137 00000030 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  138 00000034         ; and also restoring the CPSR
  139 00000034         
  140 00000034 00000000 
              E0004000 
              FFFFF000         AREA             Subroutines, CODE, READONLY
  141 00000000         
  142 00000000                 AREA             Stuff, DATA, READWRITE
  143 00000000         



ARM Macro Assembler    Page 5 


  144 00000000 00000000 
                       count   DCD              0
  145 00000004         
  146 00000004                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 35 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
checkTime 00000078

Symbol: checkTime
   Definitions
      At line 97 in file App.s
   Uses
      At line 101 in file App.s
Comment: checkTime used once
floop 00000074

Symbol: floop
   Definitions
      At line 94 in file App.s
   Uses
      At line 107 in file App.s
Comment: floop used once
start 00000000

Symbol: start
   Definitions
      At line 41 in file App.s
   Uses
      At line 40 in file App.s
Comment: start used once
stop 000000A0

Symbol: stop
   Definitions
      At line 110 in file App.s
   Uses
      At line 110 in file App.s
Comment: stop used once
wloop 00000070

Symbol: wloop
   Definitions
      At line 93 in file App.s
   Uses
      At line 108 in file App.s
Comment: wloop used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 113 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 114 in file App.s
   Uses
      At line 46 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Subroutines 00000000

Symbol: Subroutines
   Definitions
      At line 140 in file App.s
   Uses
      None
Comment: Subroutines unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Stuff 00000000

Symbol: Stuff
   Definitions
      At line 142 in file App.s
   Uses
      None
Comment: Stuff unused
count 00000000

Symbol: count
   Definitions
      At line 144 in file App.s
   Uses
      At line 98 in file App.s
      At line 121 in file App.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 85 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 80 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: IO1PIN unused
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 83 in file App.s
Comment: IO1SET used once
IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 65 in file App.s
      At line 130 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 49 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 53 in file App.s
Comment: IntEnable used once
MCR 00000014




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 71 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 68 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 59 in file App.s
      At line 128 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 62 in file App.s
      At line 74 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 49 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 52 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 61 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 73 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 70 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 64 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 129 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 44 in file App.s
      At line 133 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 56 in file App.s
      At line 135 in file App.s

VectAddr0 00000100

Symbol: VectAddr0



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file App.s
   Uses
      At line 47 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 50 in file App.s
Comment: VectCtrl0 used once
23 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 36 in file App.s
   Uses
      None
Comment: main unused
1 symbol
372 symbols in table
