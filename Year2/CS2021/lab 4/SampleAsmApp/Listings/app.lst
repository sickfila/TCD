


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028018 
                       IO1DIR  EQU              0xE0028018
   31 00000000 E0028014 
                       IO1SET  EQU              0xE0028014
   32 00000000 E002801C 
                       IO1CLR  EQU              0xE002801C
   33 00000000 E0028010 
                       IO1PIN  EQU              0xE0028010
   34 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
   35 00000000 E0028004 
                       IO0SET  EQU              0xE0028004
   36 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
   37 00000000         
   38 00000000         
   39 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   40 00000000                 IMPORT           main
   41 00000000         
   42 00000000                 EXPORT           start
   43 00000000         start
   44 00000000         
   45 00000000         ; Initialise the VIC
   46 00000000 E59F00EC        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   47 00000004         
   48 00000004 E59F10EC        ldr              r1,=irqhan
   49 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   50 0000000C         
   51 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   52 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   53 00000014         
   54 00000014 E3A01010        mov              r1,#Timer0Mask
   55 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   56 0000001C         
   57 0000001C E3A01000        mov              r1,#0
   58 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (
                                                            may not be needed)
   59 00000024         
   60 00000024         ; Initialise Timer 0



ARM Macro Assembler    Page 3 


   61 00000024 E59F00D0        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   62 00000028         
   63 00000028 E3A01002        mov              r1,#TimerCommandReset
   64 0000002C E5801004        str              r1,[r0,#TCR]
   65 00000030         
   66 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   67 00000034 E5801000        str              r1,[r0,#IR]
   68 00000038         
   69 00000038 E59F10C0        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   70 0000003C E5801018        str              r1,[r0,#MR0]
   71 00000040         
   72 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   73 00000044 E5801014        str              r1,[r0,#MCR]
   74 00000048         
   75 00000048 E3A01001        mov              r1,#TimerCommandRun
   76 0000004C E5801004        str              r1,[r0,#TCR]
   77 00000050         
   78 00000050         
   79 00000050         ;thread0 will begin here the first time
   80 00000050         thread0Start
   81 00000050 E59F10AC        ldr              r1,=IO1DIR
   82 00000054 E3A0280F        ldr              r2,=0x000f0000
   83 00000058 E5812000        str              r2,[r1]
   84 0000005C E59F10A4        ldr              r1,=IO1SET
   85 00000060 E5812000        str              r2,[r1]
   86 00000064 E59F20A0        ldr              r2,=IO1CLR
   87 00000068         
   88 00000068 E3A05601        ldr              r5,=0x00100000
   89 0000006C         
   90 0000006C E3A03801 
                       wloop   ldr              r3,=0x00010000
   91 00000070 E5823000 
                       floop   str              r3,[r2]
   92 00000074         
   93 00000074         delay0
   94 00000074 E3A08402        ldr              R8,=0x2000000
   95 00000078 E2588001 
                       dloop0  subs             R8,R8,#1
   96 0000007C 1AFFFFFD        bne              dloop0
   97 00000080         
   98 00000080 E5813000        str              r3,[r1]
   99 00000084 E1A03083        mov              r3,r3,lsl #1
  100 00000088 E1530005        cmp              r3,r5
  101 0000008C 1AFFFFF7        bne              floop
  102 00000090 EAFFFFF5        b                wloop
  103 00000094         
  104 00000094         ;thread1 will begin here the first time
  105 00000094         thread1Start
  106 00000094 E59F1074        LDR              R1,=IO0DIR
  107 00000098 E59F2074        LDR              R2,=0x0001B780
  108 0000009C         
  109 0000009C E5812000        STR              R2,[R1]
  110 000000A0 E59F1070        LDR              R1,=IO0SET
  111 000000A4 E5812000        STR              R2,[R1]
  112 000000A8 E59F206C        LDR              R2,=IO0CLR
  113 000000AC         
  114 000000AC E3A03004        LDR              R3, =4



ARM Macro Assembler    Page 4 


  115 000000B0 E59F4068        LDR              R4, =ttb
  116 000000B4 E59F5068        LDR              R5, =0x000FFFF0
  117 000000B8         restart
  118 000000B8 E3A0600F        LDR              R6, =15
  119 000000BC E0070396        MUL              R7, R6, R3
  120 000000C0         while
  121 000000C0 E3560000        CMP              R6, #0
  122 000000C4 BAFFFFFB        BLT              restart
  123 000000C8 E0848007        ADD              R8, R4, R7
  124 000000CC E7948007        LDR              R8, [R4, R7]
  125 000000D0 E5825000        STR              R5, [R2]
  126 000000D4 E5818000        STR              R8, [R1]
  127 000000D8         
  128 000000D8 E59F9048        LDR              R9, =2000000
  129 000000DC E2599001 
                       dloop   SUBS             R9, R9, #1
  130 000000E0 1AFFFFFD        BNE              dloop
  131 000000E4         
  132 000000E4 E2466001        SUB              R6, R6, #1
  133 000000E8 E2477004        SUB              R7, R7, #4
  134 000000EC EAFFFFF3        B                while
  135 000000F0         
  136 000000F0 EAFFFFFE 
                       stop    b                stop        ; branch always
  137 000000F4         
  138 000000F4 FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              E0028018 
              E0028014 
              E002801C 
              E0028008 
              0001B780 
              E0028004 
              E002800C 
              00000000 
              000FFFF0 
              001E8480         AREA             InterruptStuff, CODE, READONLY
  139 00000000         
  140 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4    ;LR will equal the 
                                                            pc of the last thre
                                                            ad
  141 00000004 E92D0003        STMFD            SP!, {R0 - R1} ;Stores the regi
                                                            ster that will be u
                                                            sed onto the stack
  142 00000008 E59F0084        LDR              R0, =threads
  143 0000000C E59F1084        LDR              R1, =threadIndex
  144 00000010 E5911000        LDR              R1, [R1]
  145 00000014 E1A01101        LSL              R1, R1, #2
  146 00000018 E0800001        ADD              R0, R0, R1  ;R0 is the pointer 
                                                            to the data structu
                                                            re based index
  147 0000001C E5900000        LDR              R0, [R0]
  148 00000020 E2801008        ADD              R1, R0, #8
  149 00000024 E8815FFC        STMEA            R1, {R2 - R12, LR} ;Store R2-R1
                                                            2, PC into memory 
  150 00000028 E8BD000C        LDMFD            SP!, {R2 - R3} ;Load R0-R1 into



ARM Macro Assembler    Page 5 


                                                             R2-R3
  151 0000002C E880000C        STMEA            R0, {R2 - R3} ;Store R2-R3 into
                                                             R0-R1 in memory
  152 00000030         
  153 00000030         
  154 00000030         ;go to next thread
  155 00000030 E59F005C        LDR              R0, =threads
  156 00000034 E59F105C        LDR              R1, =threadIndex
  157 00000038 E59F205C        LDR              R2, =threadNum
  158 0000003C E5913000        LDR              R3, [R1]
  159 00000040 E5922000        LDR              R2, [R2]
  160 00000044 E2833001        ADD              R3, R3, #1
  161 00000048 E1530002        CMP              R3, R2
  162 0000004C BA000000        BLT              endIterate  ;Check that the nex
                                                            t index is <= (size
                                                             - 1)
  163 00000050 E3A03000        LDR              R3, =0      ;If not wrap to zer
                                                            o
  164 00000054         endIterate
  165 00000054 E5813000        STR              R3, [R1]    ;Store that new ind
                                                            ex in memory
  166 00000058 E1A03103        LSL              R3, R3, #2
  167 0000005C E0800003        ADD              R0, R0, R3
  168 00000060 E5900000        LDR              R0, [R0]    ;R0 is now the poin
                                                            ter to the next thr
                                                            ead stack
  169 00000064 E3A0200D        LDR              R2, =13
  170 00000068 E7904102        LDR              R4, [R0, R2, LSL #2] ;Load the 
                                                            pc from memory to R
                                                            4
  171 0000006C E8B0000C        LDMFD            R0!, {R2 - R3} ;R0-R1
  172 00000070 E92D001C        STMFD            SP!, {R2 - R4} ;Stores R0 - R1 
                                                            and the PC
  173 00000074 E8B01FFC        LDMFD            R0!, {R2 - R12} ;Load the saved
                                                             registers of the t
                                                            hread stack
  174 00000078         
  175 00000078         
  176 00000078 E59F0028        ldr              r0,=T0
  177 0000007C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  178 00000080 E5801000        str              r1,[r0,#IR]
  179 00000084         
  180 00000084 E59F0020        ldr              r0,=VIC
  181 00000088 E3A01000        mov              r1,#0
  182 0000008C E5801030        str              r1,[r0,#VectAddr]
  183 00000090         
  184 00000090 E8FD8003        LDMFD            SP!, {R0 - R1, PC}^
  185 00000094         
  186 00000094 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E0004000 
              FFFFF000         AREA             Stuff, DATA, READWRITE
  187 00000000         
  188 00000000         ;table for the 7 segment
  189 00000000 00003780 
              00000300 



ARM Macro Assembler    Page 6 


              00009580 
              00008780 
              0000A300 
              0000A680 
              0000B680 
              00000380 
              0000B780 
              0000A380 
              0000B380 
              0000B600 
              00003480 
              00009700 
              0000B480 
              0000B080 ttb     DCD              0x00003780,0x00000300,0x0000958
0,0x00008780,0x0000A300,0x0000A680,0x0000B680,0x00000380,0x0000B780,0x0000A380,
0x0000B380,0x0000B600,0x00003480,0x0009700,0x0000B480,0x0000B080
  190 00000040         
  191 00000040         ;data structure for the scheduler
  192 00000040         ;each memory space saves R0-R12, PC for each thread 
  193 00000040 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 thread0 DCD              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, thread0Start
  194 00000078 00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 thread1 DCD              0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
, 0, 0, thread1Start
  195 000000B0         
  196 000000B0         ;thread array or queue
  197 000000B0         ;queue size
  198 000000B0 00000002 
                       threadNum
                               DCD              2
  199 000000B4         ;index of the queue
  200 000000B4 00000000 
                       threadIndex
                               DCD              0



ARM Macro Assembler    Page 7 


  201 000000B8         ;queue = [thread0, thread1]
  202 000000B8 00000000 
              00000000 threads DCD              thread0, thread1
  203 000000C0         
  204 000000C0                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 39 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
delay0 00000074

Symbol: delay0
   Definitions
      At line 93 in file App.s
   Uses
      None
Comment: delay0 unused
dloop 000000DC

Symbol: dloop
   Definitions
      At line 129 in file App.s
   Uses
      At line 130 in file App.s
Comment: dloop used once
dloop0 00000078

Symbol: dloop0
   Definitions
      At line 95 in file App.s
   Uses
      At line 96 in file App.s
Comment: dloop0 used once
floop 00000070

Symbol: floop
   Definitions
      At line 91 in file App.s
   Uses
      At line 101 in file App.s
Comment: floop used once
restart 000000B8

Symbol: restart
   Definitions
      At line 117 in file App.s
   Uses
      At line 122 in file App.s
Comment: restart used once
start 00000000

Symbol: start
   Definitions
      At line 43 in file App.s
   Uses
      At line 42 in file App.s
Comment: start used once
stop 000000F0

Symbol: stop



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 136 in file App.s
   Uses
      At line 136 in file App.s
Comment: stop used once
thread0Start 00000050

Symbol: thread0Start
   Definitions
      At line 80 in file App.s
   Uses
      At line 193 in file App.s
Comment: thread0Start used once
thread1Start 00000094

Symbol: thread1Start
   Definitions
      At line 105 in file App.s
   Uses
      At line 194 in file App.s
Comment: thread1Start used once
while 000000C0

Symbol: while
   Definitions
      At line 120 in file App.s
   Uses
      At line 134 in file App.s
Comment: while used once
wloop 0000006C

Symbol: wloop
   Definitions
      At line 90 in file App.s
   Uses
      At line 102 in file App.s
Comment: wloop used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 138 in file App.s
   Uses
      None
Comment: InterruptStuff unused
endIterate 00000054

Symbol: endIterate
   Definitions
      At line 164 in file App.s
   Uses
      At line 162 in file App.s
Comment: endIterate used once
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 140 in file App.s
   Uses
      At line 48 in file App.s
Comment: irqhan used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Stuff 00000000

Symbol: Stuff
   Definitions
      At line 186 in file App.s
   Uses
      None
Comment: Stuff unused
thread0 00000040

Symbol: thread0
   Definitions
      At line 193 in file App.s
   Uses
      At line 202 in file App.s
Comment: thread0 used once
thread1 00000078

Symbol: thread1
   Definitions
      At line 194 in file App.s
   Uses
      At line 202 in file App.s
Comment: thread1 used once
threadIndex 000000B4

Symbol: threadIndex
   Definitions
      At line 200 in file App.s
   Uses
      At line 143 in file App.s
      At line 156 in file App.s

threadNum 000000B0

Symbol: threadNum
   Definitions
      At line 198 in file App.s
   Uses
      At line 157 in file App.s
Comment: threadNum used once
threads 000000B8

Symbol: threads
   Definitions
      At line 202 in file App.s
   Uses
      At line 142 in file App.s
      At line 155 in file App.s

ttb 00000000

Symbol: ttb
   Definitions
      At line 189 in file App.s
   Uses
      At line 115 in file App.s
Comment: ttb used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 36 in file App.s
   Uses
      At line 112 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 34 in file App.s
   Uses
      At line 106 in file App.s
Comment: IO0DIR used once
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 35 in file App.s
   Uses
      At line 110 in file App.s
Comment: IO0SET used once
IO1CLR E002801C

Symbol: IO1CLR
   Definitions
      At line 32 in file App.s
   Uses
      At line 86 in file App.s
Comment: IO1CLR used once
IO1DIR E0028018

Symbol: IO1DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 81 in file App.s
Comment: IO1DIR used once
IO1PIN E0028010

Symbol: IO1PIN
   Definitions
      At line 33 in file App.s
   Uses
      None
Comment: IO1PIN unused
IO1SET E0028014

Symbol: IO1SET
   Definitions
      At line 31 in file App.s
   Uses
      At line 84 in file App.s
Comment: IO1SET used once
IR 00000000

Symbol: IR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 8 in file App.s
   Uses
      At line 67 in file App.s
      At line 178 in file App.s

IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 51 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 55 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 73 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 70 in file App.s
Comment: MR0 used once
T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 61 in file App.s
      At line 176 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused
TCR 00000004

Symbol: TCR
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 9 in file App.s
   Uses
      At line 64 in file App.s
      At line 76 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 51 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 54 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 63 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 75 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 72 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 66 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001

Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 177 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 46 in file App.s
      At line 180 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 58 in file App.s
      At line 182 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 23 in file App.s
   Uses
      At line 49 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 52 in file App.s
Comment: VectCtrl0 used once
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 40 in file App.s
   Uses
      None
Comment: main unused
1 symbol
386 symbols in table
